---
import {getCollection, getEntry, render} from "astro:content";
import Sections from "~/layouts/sections.astro";
import Link from '~/components/link.astro'

export async function getStaticPaths() {
    const sectionsCollection = await getCollection('sections');
    return sectionsCollection.map((section) => {
        const [version, lang, ...slug] = section.id.split('/');

        return {
            params: {
                version: version.split('').join('.'), // we receive "10" string, transforming to "1.0"
                lang: lang,
                slug: slug.join('/'),
            },
            props: section
        }
    })
}

const {id} = Astro?.props;

if (id === undefined) {
    throw new Error('ID is required');
}

// 2. Query for the entry directly using the request slug
const page = await getEntry('sections', id);

// 3. Redirect if the entry does not exist
if (page === undefined) {
    // return Astro.redirect("/404");
}

const {title, description} = Astro?.props?.data;
const {headings, Content} = await render(page);
---

<Sections>
    <div>
        <nav aria-label="Breadcrumb">
            <ul class="breadcrumb" itemscope itemtype="https://schema.org/BreadcrumbList">
                <li class="item" itemprop="itemListElement" itemscope
                    itemtype="https://schema.org/ListItem">
                    <a href="#" class="link" itemprop="item">
                        <span itemprop="name">Home</span>
                    </a>
                    <meta itemprop="position" content="1"/>
                </li>
                <li class="item">
                    <svg-circle/>
                </li>
                <li class="item" itemprop="itemListElement" itemscope
                    itemtype="https://schema.org/ListItem">
                    <a href="#" class="link" itemprop="item">
                        <span itemprop="name">Library</span>
                    </a>
                    <meta itemprop="position" content="2"/>
                </li>
                <li class="item">
                    <svg-circle/>
                </li>
                <li class="item active" aria-current="page" itemprop="itemListElement" itemscope
                    itemtype="https://schema.org/ListItem">
                    <span itemprop="name">{title}</span>
                    <meta itemprop="position" content="3"/>
                </li>
            </ul>
        </nav>
    </div>
    <div class="content">
        <div class="intro">
            <h1 class="title">{title}</h1>
            <p class="subtitle">{description}</p>
        </div>
        <Content components={{a: Link}}/>
    </div>
</Sections>

<style lang="scss" is:global>
  @use "sass:list";
  @use "sass:string";
  @use "sass:meta";
  @use "sass:map";

  @use "~/styles/app.scss" as app;

  // ↓ Amazing content
  @use "@nulllogic/scssleon/scss/content" with (
    $config: app.$config,
    $theme: app.$theme
  );

  // ↓ Breadcrumbs
  @use '@nulllogic/scssleon/scss/components/breadcrumb' with (
    $config: app.$config,
    $theme: app.$theme
  );

</style>

<style lang="scss">

  @use "sass:list";
  @use "sass:string";
  @use "sass:meta";
  @use "sass:map";

  @use "~/styles/app.scss" as app;

  $intro: (
    margin: 0 0 15px 0,
    _subclasses : (
      '.title' : (
        font-size: 3.75rem,
        line-height: 1,
        font-weight: 500,
        margin: 0,
        padding: 0 0 15px 0,
      ),
      '.subtitle' : (
        font-size: 1.35rem,
        font-weight: 300,
        color: rgba(125, 133, 144, 1),
        line-height: 1.778rem,
      )
    )
  );

  @include app.generate-component(
      $intro,
      'intro',
      app.$config,
      app.$theme
  );
</style>