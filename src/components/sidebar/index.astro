---
import {getCollection} from 'astro:content'
import {generate_rel_link} from '~/utils/links'

const components_category = await getCollection('components_category');
const docs = await getCollection('docs');

const pathname = new URL(Astro.request.url).pathname
const generate_class = (link) => {
    let classes = ['link']
    let url = generate_rel_link(Astro, 'docs/' + Astro.params.version +
        '/' +
        Astro.params.lang +
        link.id.replace(
            Astro.params.version.replace(/\./g, '') +
            '/' +
            Astro.params.lang,
            '',
        ))

    if (pathname === url.pathname) {
        classes.push('active')
    }

    return [classes]
}

import {generate_link} from '~/utils/links';
---

<aside class="sidebar">
    <div style="position: sticky; top: 60px;left: 0;height: auto;overflow-y: auto;max-height: calc(100dvh - 60px); padding-bottom: 60px;">
        <div class="card">
            <nav>
                <ul class="nav vertical">
                    {components_category.sort((a, b) => a?.data?.position - b?.data?.position).map((category) => {
                        return (
                                <li class="item">
                                    <h5 class="title">{category.data.title}</h5>
                                    <ul class="nav vertical">
                                        {
                                            docs.filter((doc) => doc.data.category === category.id)
                                                .sort((a, b) => a?.data?.title.localeCompare(b?.data?.title))
                                                .map((doc) => {
                                                    return (
                                                            <li class="item">
                                                                <a
                                                                        class:list={generate_class(doc)}
                                                                        href={generate_link(Astro, doc, 'docs')}
                                                                >{doc.data.title}</a>
                                                            </li>
                                                    )
                                                })
                                        }
                                    </ul>
                                </li>
                        )
                    })}
                </ul>
            </nav>
        </div>
    </div>

    <svg fill="#ffffff" height="15px" width="15px" version="1.1" id="Capa_1"
         xmlns="http://www.w3.org/2000/svg"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         viewBox="0 0 60 60" xml:space="preserve">
<path d="M53,41.069V29H31V19h7V3H22v16h7v10H7v12.069C3.06,41.564,0,44.928,0,49c0,4.411,3.589,8,8,8s8-3.589,8-8
	c0-4.072-3.06-7.436-7-7.931V31h20v10.069c-3.94,0.495-7,3.859-7,7.931c0,4.411,3.589,8,8,8s8-3.589,8-8c0-4.072-3.06-7.436-7-7.931
	V31h20v10.069c-3.94,0.495-7,3.859-7,7.931c0,4.411,3.589,8,8,8s8-3.589,8-8C60,44.928,56.94,41.564,53,41.069z M24,5h12v12H24V5z
	 M14,49c0,3.309-2.691,6-6,6s-6-2.691-6-6s2.691-6,6-6S14,45.691,14,49z M36,49c0,3.309-2.691,6-6,6s-6-2.691-6-6s2.691-6,6-6
	S36,45.691,36,49z M52,55c-3.309,0-6-2.691-6-6s2.691-6,6-6s6,2.691,6,6S55.309,55,52,55z"/>
</svg>
</aside>

<style lang="scss">
  @use "sass:list";
  @use "sass:meta";
  @use "sass:map";

  @use "../../styles/app.scss" as app;

  $sidebar: (
    --sidebar-section-width: 0,
    grid-area: sidebar,
    display: block,
    align-self: start,
    height: 100%,
    /***/
    _subclasses : (
      '.nav' : (
        --nav-gap : 1px,
        /***/
        _subclasses : (
          '.item' : (
            /***/
            _subclasses: (
              '&:first-child .title' : (
                margin: 0 0 10px 0
              ),
              '.title' : (
                font-size: 1.25rem,
                font-weight: 500,
                margin: 10px 0,
              ),
              '.item' : (
                /***/
                _subclasses: (
                  '.link' : (
                    color: var(--link-color),
                    padding: .4rem,
                    text-decoration: none,
                    border-radius: 0.25rem,
                    margin: 0 0 0 0.75rem,
                    /***/
                    _colors: (
                      light: (
                        link-color: rgb(148, 163, 184),
                        hover-color: rgba(43, 57, 10, 0.7),
                        background: #e0e3de,
                        background-active-link : rgb(74, 109, 71),
                      ),
                      dark: (
                        link-color: rgb(148, 163, 184),
                        hover-color: #fff,
                        background : rgb(148, 163, 184),
                        background-active-link : rgba(57, 119, 33, 0.6),
                      )
                    ),
                    /***/
                    _subclasses: (
                      '&.active' : (
                        color: rgb(238, 246, 220),
                        background: var(--background-active-link),
                      ),
                      '&:hover:not(.active)' : (
                        color: var(--hover-color),
                        background: var(--background),
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  );

  @include app.generate-component(
      $sidebar,
      'sidebar',
      app.$config,
      app.$theme,
      (variable: (exclude : ('nav')))
  );
</style>